name: 'Terraform plan'

on:
  push:
    branches: 
      - main 

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  terraform:
    name: 'Terraform plan'
    runs-on: ubuntu-latest
    environment: production
    env: 
      ARM_SUBSCRIPTION_ID: ${{ azure_subscription_id }}
      ARM_TENANT_ID: ${{ azure_subscription_tenant_id >"
      ARM_CLIENT_ID: ${{ service_principal_appid }}
      ARM_CLIENT_SECRET: ${{ service_principal_password }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: login via Az modules
      uses: azure/login@v1.4.0
      with: 
        creds: ${{ secrets.AZURE_RDAC }}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

 
