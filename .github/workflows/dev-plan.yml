name: 'Terraform plan'

on:
  push:
    branches: 
      - main 

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  terraform:
    name: 'Terraform plan'
    runs-on: ubuntu-latest
    environment: production
    env: 
      ARM_SUBSCRIPTION_ID: ${{ secretS.SUBSCRIPTIONID }}
      ARM_TENANT_ID: ${{ secrets.TENANTID }}
      ARM_CLIENT_ID: ${{ secrets.CLIENTID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: login via Az modules
      uses: azure/login@v1.4.0
      with: 
        creds: ${{ secrets.AZURE_RDAC }}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform plan
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.4

    - name: Terraform Init azurem backend
      run: | 
        terraform init -input=false \
        -backend-config="resource_group_name=demorg" \
        -backend-config="storage_account_name=appstoreinfun" \
        -backend-config="container_name=gacttfstore" \
        -backend-config="key=terraformrg.tfstate" \
        -backend-config=client_secret="$ARM_CLIENT_SECRET" \
        -backend-config=client_id="$ARM_CLIENT_ID" \
        -backend-config=tenant_id="$ARM_TENANT_ID" \
        -backend-config=subscription_id="$ARM_SUBSCRIPTION_ID"
       

       # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -out=plan.tfplan -input=false -var-file="env/dev.tfvars"

 
